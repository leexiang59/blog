{"version":3,"sources":["component/Header/Header.js","component/util.js","page/about/index.js","page/resume/index.js","page/blog/src/List.js","page/blog/src/Details.js","page/blog/src/EditorComponent.js","page/blog/src/Edit.js","page/blog/src/Add.js","page/contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navList","title","href","react_default","a","createElement","className","map","item","index","key","Link","to","Component","util","sendErrorToWX","err","url","fetch","method","mode","headers","Content-Type","body","JSON","stringify","msgtype","markdown","content","concat","fetchLite","_ref","arguments","length","undefined","_ref$options","options","_ref$done","done","_ref$fail","fail","json","console","log","_ref$error","error","timeOut","Promise","resolve","reject","setTimeout","msg","fetchHandle","objectSpread","credentials","then","res","status","race","catch","About","valueChange","type","value","setState","defineProperty","loginHandle","_this$state","userName","password","name","data","window","location","reload","showLogin","_this2","userInfo","_this$state2","onChange","e","target","onClick","Resume","List","articleList","id","dangerouslySetInnerHTML","__html","Details","deleteHandle","history","push","articleDetail","match","params","EditorComponent","handleEditorChange","editorState","editorChange","saveEditorContentByKey","saveHandle","articleData","BraftEditor","createEditorState","dist_default","onSave","Edit","titleChange","toHTML","saveEditorContent","fetchArticle","backData","EditorComponent_EditorComponent","Add","Contact","App","BrowserRouter","Header_Header_Header","Route","exact","path","component","about_About","Switch","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39f85ee7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Header.less'\nexport default class Header extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      navList: [\n        { title: 'ABOUT', href: '/' },\n        { title: 'RESUME', href: '/resume' },\n        { title: 'BLOG', href: '/blog' },\n        { title: 'CONTACT', href: '/contact' }\n      ]\n    }\n  }\n  render () {\n    let { navList } = this.state\n    return (\n      <header className='header'>\n        <ul>\n          {\n            navList.map((item, index) => <li key={index + ''}><Link to={item.href}>{item.title}</Link></li>)\n          }\n        </ul>\n      </header>\n    )\n  }\n}\n","\r\nconst util = {\r\n  sendErrorToWX: function (err, url) {\r\n    fetch(`https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=73ede3e3-e70b-4bb7-9f23-21ce41b09e10`, {\r\n      method: 'POST',\r\n      mode: 'no-cors',\r\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\r\n      body: JSON.stringify({\r\n        'msgtype': 'markdown',\r\n        'markdown': {\r\n          'content': `#### 错误信息 \\n\\n  >${JSON.stringify(err)} \\n >接口：${url}`\r\n        }\r\n      })\r\n    })\r\n  },\r\n  fetchLite: function (\r\n    {\r\n      url,\r\n      options = {},\r\n      done = () => {},\r\n      fail = json => { console.log(json) },\r\n      error = error => { console.log(error) }\r\n    } = {}\r\n  ) {\r\n    // 接口超时处理\r\n    let timeOut = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        reject({\r\n          state: 408,\r\n          msg: '请求超时'\r\n        })\r\n      }, 3 * 1000)\r\n    })\r\n    let fetchHandle = new Promise((resolve, reject) => {\r\n      fetch(url, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        ...options\r\n      }).then(res => {\r\n        if (res.status === 200) {\r\n          resolve(res.json())\r\n        } else {\r\n          reject({\r\n            state: res.status,\r\n            msg: '网络错误'\r\n          })\r\n        }\r\n      })\r\n    })\r\n    return Promise.race([fetchHandle, timeOut]).then(json => {\r\n      if (json.state === 0) {\r\n        done && done(json)\r\n      } else {\r\n        fail && fail(json)\r\n        this.sendErrorToWX(json, url)\r\n      }\r\n    }).catch(err => {\r\n      this.sendErrorToWX(err, url)\r\n      error && error(err)\r\n    })\r\n  }\r\n}\r\nexport default util\r\n","import React, { Component } from 'react'\nimport './about.less'\nimport util from '../../component/util'\n// import homeLogo from '../../img/home_logo.jpg';\nexport default class About extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      showLogin: false,\n      userName: '',\n      password: ''\n    }\n  }\n\n  valueChange = (type, value) => {\n    this.setState({[type]: value})\n  }\n\n  // 登录\n  loginHandle=()=> {\n    let {userName, password} = this.state\n    util.fetchLite({\n      url: `/api/user/login`,\n      options: {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json;charset=UTF-8'},\n        body: JSON.stringify({\n          \"name\": userName,\n          \"password\": password\n        })\n      },\n      done: data => {\n        window.location.reload()\n      }\n    })\n  }\n  render () {\n    // let age = new Date().getFullYear()\n    const {userInfo} = this.props\n    let {showLogin, userName, password} = this.state\n    return (\n      <div className='about'>\n        {\n          !showLogin ?\n            <div className={`logo logo-${userInfo?'login':'logout'}`}\n                 onClick={()=>{this.setState({showLogin:true})}}>\n              {/* <img src={homeLogo} alt=''/> */}\n            </div>\n            : <div className=\"login-form\">\n              <input type='text'\n                     value={userName}\n                     onChange={(e) => this.valueChange('userName', e.target.value)}/>\n              <input type='password'\n                     value={password}\n                     onChange={(e) => this.valueChange('password', e.target.value)}/>\n              <button onClick={this.loginHandle}>Go</button>\n            </div>\n        }\n        <div className='info'>\n          <p>Name：Will</p>\n          {/* <p>Age：{age - 1993}</p> */}\n          <p>Country：China</p>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './resume.less';\nexport default class Resume extends Component {\n    render() {\n        return (\n            <div className='resume'>\n                Resume\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport util from '../../../component/util'\nexport default class List extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleList: []\n    }\n  }\n\n  componentDidMount () {\n    util.fetchLite({\n      url: `/api/article/list`,\n      done: data => {\n        this.setState({\n          articleList: data.data\n        })\n      }\n    })\n  }\n  render () {\n    let { articleList } = this.state\n    return (\n      <div className='blog'>\n        <div className='list'>\n          <div className='add-blog'>\n            <Link to='/blog/add'>Add</Link>\n          </div>\n          {\n            articleList.map((item, index) =>\n              <div key={index} className='article-item'>\n                <Link to={`/blog/${item.id}`}>\n                  <h3 className='title'>{item.title}</h3>\n                  {/* <p className='message'>\n                    <span>{item.createTime}</span>\n                  </p> */}\n                  <p className='content' dangerouslySetInnerHTML={{ __html: item.content }} />\n                </Link>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport util from '../../../component/util'\nexport default class Details extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleDetail: {},\n      id: this.props.match && this.props.match.params ? this.props.match.params.id-0 : null,\n    }\n  }\n\n  // 删除\n  deleteHandle=()=>{\n    util.fetchLite({\n      url: `/api/article/delete`,\n      options:{\n        method: 'POST',\n        headers: {'Content-Type': 'application/json;charset=UTF-8'},\n        body: JSON.stringify({\n          \"id\": this.state.id\n        })\n      },\n      done: () => {\n        this.props.history.push('/blog/')\n      }\n    })\n  }\n  componentDidMount () {\n    util.fetchLite({\n      url:`/api/article/list/${this.state.id}`,\n      done:data=>{\n        this.setState({\n          articleDetail: data.data[0]\n        })\n      }\n    })\n  }\n\n  render () {\n    let { articleDetail,id } = this.state\n    return (\n      <div className='blog'>\n        <div className='detail'>\n          <h1 className='title'>{articleDetail.title}</h1>\n          <p className='btn-operate'>\n            {\n              id!==9 &&<button className=\"btn-delete\" onClick={this.deleteHandle}>Delete</button>\n            }\n            <Link to={`/blog/edit/${articleDetail.id}`}><button className=\"btn-edit\">Edit</button></Link>\n          </p>\n          <div className='content' dangerouslySetInnerHTML={{ __html: articleDetail.content }} />\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nexport default class EditorComponent extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleData :null,\n      editorState : BraftEditor.createEditorState(this.props.value||null)\n    }\n  }\n\n  // 修改内容\n  handleEditorChange = (editorState) => {\n    this.setState({\n      editorState: editorState\n    })\n    this.props.editorChange(editorState)\n  }\n\n  // Ctrl+S 保存，留在当前页\n  saveEditorContentByKey=()=>{\n    this.props.saveHandle('key')\n  }\n  render () {\n    let {editorState} = this.state\n    return (\n      <div className=\"article-braft-edit\">\n        <BraftEditor\n          value={editorState}\n          onChange={this.handleEditorChange}\n          onSave={this.saveEditorContentByKey}\n        />\n      </div>\n    )\n  }\n}","\nimport React, { Component } from 'react'\nimport EditorComponent from './EditorComponent'\nimport util from '../../../component/util'\nexport default class Edit extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      id: this.props.match && this.props.match.params ? this.props.match.params.id : null,\n      articleData :null,\n      title:'',\n    }\n  }\n\n  // 修改标题\n  titleChange=(e)=>{\n    this.setState({\n      title:e.target.value\n    })\n  }\n\n  // 修改内容\n  editorChange = (articleData) => {\n    this.setState({\n      articleData\n    })\n  }\n\n  // 保存\n  saveHandle=(type)=>{\n    let {id, title, articleData} = this.state\n    util.fetchLite({\n      url: `/api/article/update`,\n      options:{\n        method: 'POST',\n        headers: {'Content-Type': 'application/json;charset=UTF-8'},\n        body: JSON.stringify({\n          \"id\": id,\n          \"title\": title,\n          \"content\": articleData.toHTML()\n        })\n      },\n      done: data => {\n        // 点击按钮保存时，跳转详情页。Ctrl+S保存时，留在当前编辑页。\n        if(type==='btn'){\n          this.props.history.push(`/blog/${id || data.data.id || ''}`)\n        }\n      }\n    })\n  }\n\n  // 点击按钮保存，跳转回详情页\n  saveEditorContent = ()=> {\n    this.saveHandle('btn')\n  }\n\n  fetchArticle=(id)=>{\n    util.fetchLite({\n      url: `/api/article/list/${id}`,\n      done: data => {\n        let backData = data.data[0]\n        this.setState({\n          title: backData.title,\n          articleData: backData.content\n        })\n      }\n    })\n  }\n\n  componentWillMount () {\n    let {id} = this.state\n    id && this.fetchArticle(id)\n  }\n\n  render () {\n    let {title,articleData} = this.state\n    return (\n      <div className=\"blog\">\n        <div className='edit'>\n          <div className=\"edit-content\">\n            <div className=\"edit-item\">\n              <p>Title：</p>\n              <input className=\"title\" value={title} onChange={this.titleChange}/>\n            </div>\n            <div className=\"edit-item\">\n              <p>Content：</p>\n              {\n                articleData===null || articleData===undefined ? '' :\n                  <EditorComponent\n                    value={articleData}\n                    saveHandle={this.saveHandle}\n                    editorChange={this.editorChange}\n                  />\n              }\n            </div>\n            <div className=\"edit-item item-submit\">\n              <button className=\"submit\" onClick={this.saveEditorContent}>Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","\nimport React, { Component } from 'react'\nimport EditorComponent from './EditorComponent'\nimport util from '../../../component/util'\nexport default class Add extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      title:'',\n      articleData :null,\n    }\n  }\n\n  // 修改标题\n  titleChange=(e)=>{\n    this.setState({\n      title:e.target.value\n    })\n  }\n\n  // 修改内容\n  editorChange = (articleData) => {\n    this.setState({\n      articleData\n    })\n  }\n\n  // 保存\n  saveHandle=(type)=> {\n    let {title, articleData} = this.state\n    util.fetchLite({\n      url: `/api/article/add`,\n      options: {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json;charset=UTF-8'},\n        body: JSON.stringify({\n          \"title\": title,\n          \"content\": articleData.toHTML()\n        })\n      },\n      done: data => {\n        // 点击按钮保存时，跳转详情页。\n        if (type === 'btn') {\n          this.props.history.push(`/blog/${data.data.id || ''}`)\n        } else {\n          // Ctrl+S保存时，跳转对应详情页。由添加转为编辑状态。\n          this.props.history.push(`/blog/edit/${data.data.id}`)\n          //this.props.history.goBack() // 每次Ctrl+S保存之后回退一下history，保证点击浏览器回退按钮时可以返回上一页。\n        }\n      }\n    })\n  }\n\n  // 点击按钮保存，跳转回详情页\n  saveEditorContent = ()=> {\n    this.saveHandle('btn')\n  }\n\n  render () {\n    let {title} = this.state\n    return (\n      <div className=\"blog\">\n        <div className='edit'>\n          <div className=\"edit-content\">\n            <div className=\"edit-item\">\n              <p>Title：</p>\n              <input className=\"title\" value={title} onChange={this.titleChange}/>\n            </div>\n            <div className=\"edit-item\">\n              <p>Content：</p>\n              <EditorComponent\n                saveHandle={this.saveHandle}\n                editorChange={this.editorChange}\n              />\n            </div>\n            <div className=\"edit-item item-submit\">\n              <button className=\"submit\" onClick={this.saveEditorContent}>Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './contact.less';\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div className='contact'>\n                Email：<a href='mailto:980901387@qq.com'>980901387@qq.com</a>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.less'\nimport Header from './component/Header/Header'\nimport About from './page/about'\nimport Resume from './page/resume'\nimport { List, Details, Edit, Add } from './page/blog'\nimport Contact from './page/contact'\nimport util from './component/util'\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userInfo: null\n    }\n  }\n  componentDidMount () {\n    util.fetchLite({\n      url: `/api/user/user_info`,\n      done: data => {\n        this.setState({\n          userInfo: data.data\n        })\n      }\n    })\n  }\n  render () {\n    let { userInfo } = this.state\n    return (\n      <div>\n        <Router>\n          <div className='App'>\n            <Header />\n            <Route exact path='/' component={() => (<About userInfo={userInfo} />)} />\n            <Route path='/resume' component={Resume} />\n            <Switch>\n              <Route path='/blog/edit/:id' component={Edit} />\n              <Route path='/blog/edit' component={Edit} />\n              <Route path='/blog/add' component={Add} />\n              <Route path='/blog/:id' component={Details} />\n              <Route exact path='/blog' component={List} />\n            </Switch>\n            <Route path='/contact' component={Contact} />\n            <footer />\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}