{"version":3,"sources":["component/Header/Header.js","page/about/index.js","page/resume/index.js","page/blog/src/List.js","page/blog/src/Details.js","page/blog/src/Edit.js","page/blog/index.js","page/contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navList","title","href","react_default","a","createElement","className","map","item","index","key","Link","to","Component","About","Resume","List","articleList","_this2","fetch","then","res","json","data","status","setState","concat","id","author","createTime","dangerouslySetInnerHTML","__html","content","Details","articleDetail","Edit","titleChange","e","target","value","handleEditorChange","editorState","saveEditorContent","_this$state","method","credentials","headers","Content-Type","body","JSON","stringify","toHTML","history","push","match","params","articleData","BraftEditor","createEditorState","backData","_this$state2","onChange","dist_default","onClick","Blog","thisId","Details_Details","List_List","Contact","App","userList","BrowserRouter","Header_Header_Header","Route","exact","path","component","Switch","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d496f72.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport './Header.less'\nexport default class Header extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            navList:[\n                {title:'ABOUT',href:'/'},\n                {title:'RESUME',href:'/resume'},\n                {title:'BLOG',href:'/blog'},\n                {title:'CONTACT',href:'/contact'}\n            ]\n        }\n    }\n    render(){\n        let {navList} = this.state\n        return(\n            <header className='header'>\n             <ul>\n                 {\n                     navList.map((item,index)=><li key={index+\"\"}><Link to={item.href}>{item.title}</Link></li>)\n                 }\n             </ul>\n            </header>\n        )\n    }\n}","import React, { Component } from 'react'\nimport './about.less';\n//import homeLogo from '../../img/home_logo.jpg';\nexport default class About extends Component {\n    render() {\n        // let age = new Date().getFullYear()\n        return (\n            <div className='about'>\n                <div className='logo'>\n                    {/* <img src={homeLogo} alt=''/> */}\n                </div>\n                <div className='info'>\n                    <p>Name：Will</p>\n                    {/* <p>Age：{age - 1993}</p> */}\n                    <p>Country：China</p>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport './resume.less';\nexport default class Resume extends Component {\n    render() {\n        return (\n            <div className='resume'>\n                Resume\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nexport default class List extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleList: []\n    }\n  }\n\n  componentDidMount () {\n    fetch(`/api/article/list`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            articleList: data.data\n          })\n        }\n      })\n  }\n\n  render () {\n    let {articleList} = this.state\n    return (\n      <div className='article-list'>\n        {\n          articleList.map((item, index) =>\n            <Link key={index} className='article-item' to={`/blog/${item.id}`}>\n              <h3>{item.title}</h3>\n              <p className='message'>\n                <span>{item.author}</span>\n                <span>{item.createTime}</span>\n              </p>\n              <p className='content' dangerouslySetInnerHTML={{__html: item.content}} />\n            </Link>\n          )\n        }\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nexport default class Details extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleDetail: null\n    }\n  }\n\n  componentDidMount () {\n    fetch(`/api/article/list/${this.props.id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            articleDetail: data.data[0]\n          })\n        }\n      })\n  }\n\n  render () {\n    let {articleDetail} = this.state\n    return (\n      <div className='detail'>\n        {\n          articleDetail\n            ? <div>\n              <h1 className='title'>{articleDetail.title}</h1>\n              <p className='btn-edit'><Link to={`/blog/edit/${articleDetail.id}`}>Edit</Link></p>\n              <div className='content' dangerouslySetInnerHTML={{__html: articleDetail.content}} />\n            </div>\n            : ''\n        }\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nexport default class Edit extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      id: this.props.match && this.props.match.params ? this.props.match.params.id : null,\n      articleData :null,\n      title:'',\n      editorState : BraftEditor.createEditorState(null)\n    }\n  }\n\n  // 修改标题\n  titleChange=(e)=>{\n    this.setState({\n      title:e.target.value\n    })\n  }\n\n  // 修改内容\n  handleEditorChange = (editorState) => {\n    this.setState({\n      editorState: editorState\n    })\n  }\n\n  // 保存\n  saveEditorContent = ()=> {\n    let {id, title, editorState} = this.state\n    fetch(`/api/article/update`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"id\": id,\n        \"title\": title,\n        \"content\": editorState.toHTML()\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.props.history.push(`/blog/${id}`)\n        }\n      })\n  }\n\n\n\n  componentWillMount () {\n    fetch(`/api/article/list/${this.state.id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          let backData = data.data[0]\n          this.setState({\n            articleData: backData,\n            title: backData.title,\n            editorState: BraftEditor.createEditorState(backData.content)\n          })\n        }\n      })\n  }\n\n  render () {\n    let {title,editorState} = this.state\n    return (\n      <div className='edit'>\n        <div className=\"edit-content\">\n          <div className=\"edit-item\">\n            <p>Title：</p>\n            <input className=\"title\" value={title} onChange={this.titleChange}/>\n          </div>\n          <div className=\"edit-item\">\n            <p>Content：</p>\n            <div className=\"article-braft-edit\">\n              <BraftEditor\n                value={editorState}\n                onChange={this.handleEditorChange}\n                //onSave={this.saveEditorContent}\n              />\n            </div>\n          </div>\n          <div className=\"edit-item item-submit\">\n            <button className=\"submit\" onClick={this.saveEditorContent}>Save</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './blog.less'\nimport List from './src/List'\nimport Details from './src/Details'\nimport Edit from './src/Edit'\nclass Blog extends Component {\n  render () {\n    let thisId = this.props.match && this.props.match.params ? this.props.match.params.id : null\n    return (\n      <div className='blog'>\n        {\n          thisId\n            ? <Details id={thisId} />\n            : <List />\n        }\n      </div>\n    )\n  }\n}\n\nexport {Blog, Edit}\n","import React, { Component } from 'react'\nimport './contact.less';\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div className='contact'>\n                Email：<a href='mailto:980901387@qq.com'>980901387@qq.com</a>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './App.less'\nimport Header from './component/Header/Header'\nimport About from './page/about'\nimport Resume from './page/resume'\nimport {Blog, Edit} from './page/blog'\nimport Contact from './page/contact'\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userList: []\n    }\n  }\n  componentDidMount () {\n    fetch(`/api/user/list`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            userList: data.data\n          })\n        }\n      })\n  }\n  render () {\n    return (\n      <div>\n        <Router>\n          <div className='App'>\n            <Header />\n            <Route exact path='/' component={About} />\n            <Route path='/resume' component={Resume} />\n            <Switch>\n              <Route path='/blog/edit/:id' component={Edit} />\n              <Route path='/blog/edit' component={Edit} />\n              <Route path='/blog/:id' component={Blog} />\n              <Route exact path='/blog' component={Blog} />\n            </Switch>\n            <Route path='/contact' component={Contact} />\n            <footer />\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}