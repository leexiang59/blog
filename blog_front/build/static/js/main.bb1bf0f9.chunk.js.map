{"version":3,"sources":["component/Header/Header.js","page/about/index.js","page/resume/index.js","page/blog/src/List.js","page/blog/src/Details.js","page/blog/src/Edit.js","page/contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navList","title","href","react_default","a","createElement","className","map","item","index","key","Link","to","Component","About","valueChange","type","value","setState","defineProperty","loginHandle","_this$state","userName","password","fetch","method","credentials","headers","Content-Type","body","JSON","stringify","name","then","res","json","data","status","window","location","reload","showLogin","_this2","userInfo","_this$state2","onChange","e","target","onClick","concat","Resume","List","articleList","id","createTime","dangerouslySetInnerHTML","__html","content","Details","deleteHandle","history","push","articleDetail","match","params","Edit","titleChange","handleEditorChange","editorState","saveHandle","undefined","toHTML","goBack","saveEditorContentByKey","saveEditorContent","fetchArticle","backData","articleData","BraftEditor","createEditorState","dist_default","onSave","Contact","App","fetConfig","console","log","BrowserRouter","Header_Header_Header","Route","exact","path","component","about_About","Switch","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb1bf0f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Header.less'\nexport default class Header extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      navList: [\n        { title: 'ABOUT', href: '/' },\n        { title: 'RESUME', href: '/resume' },\n        { title: 'BLOG', href: '/blog' },\n        { title: 'CONTACT', href: '/contact' }\n      ]\n    }\n  }\n  render () {\n    let { navList } = this.state\n    return (\n      <header className='header'>\n        <ul>\n          {\n            navList.map((item, index) => <li key={index + ''}><Link to={item.href}>{item.title}</Link></li>)\n          }\n        </ul>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './about.less'\n// import homeLogo from '../../img/home_logo.jpg';\nexport default class About extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      showLogin: false,\n      userName: '',\n      password: ''\n    }\n  }\n\n  valueChange = (type, value) => {\n    this.setState({[type]: value})\n  }\n\n  // 登录\n  loginHandle=()=> {\n    let {userName, password} = this.state\n    fetch(`/api/user/login`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"name\": userName,\n        \"password\": password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          //this.setState({showLogin:false})\n          window.location.reload()\n        }\n      })\n  }\n  render () {\n    // let age = new Date().getFullYear()\n    const {userInfo} = this.props\n    let {showLogin, userName, password} = this.state\n    return (\n      <div className='about'>\n        {\n          !showLogin ?\n            <div className={`logo logo-${userInfo?'login':'logout'}`}\n                 onClick={()=>{this.setState({showLogin:true})}}>\n              {/* <img src={homeLogo} alt=''/> */}\n            </div>\n            : <div className=\"login-form\">\n              <input type='text'\n                     value={userName}\n                     onChange={(e) => this.valueChange('userName', e.target.value)}/>\n              <input type='password'\n                     value={password}\n                     onChange={(e) => this.valueChange('password', e.target.value)}/>\n              <button onClick={this.loginHandle}>Go</button>\n            </div>\n        }\n        <div className='info'>\n          <p>Name：Will</p>\n          {/* <p>Age：{age - 1993}</p> */}\n          <p>Country：China</p>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './resume.less';\nexport default class Resume extends Component {\n    render() {\n        return (\n            <div className='resume'>\n                Resume\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nexport default class List extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleList: []\n    }\n  }\n\n  componentDidMount () {\n    fetch(`/api/article/list`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            articleList: data.data\n          })\n        }\n      })\n  }\n\n  render () {\n    let { articleList } = this.state\n    return (\n      <div className='blog'>\n        <div className='list'>\n          <div className='add-blog'>\n            <Link to=\"/blog/edit\">Add</Link>\n          </div>\n          {\n            articleList.map((item, index) =>\n              <div key={index} className='article-item'>\n                <Link to={`/blog/${item.id}`}>\n                  <h3 className='title'>{item.title}</h3>\n                  <p className='message'>\n                    <span>{item.createTime}</span>\n                  </p>\n                  <p className='content' dangerouslySetInnerHTML={{ __html: item.content }} />\n                </Link>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nexport default class Details extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleDetail: {},\n      id: this.props.match && this.props.match.params ? this.props.match.params.id-0 : null,\n    }\n  }\n\n  // 删除\n  deleteHandle=()=>{\n    fetch(`/api/article/delete`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"id\": this.state.id\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.props.history.push('/blog/')\n        }\n      })\n  }\n  componentDidMount () {\n    fetch(`/api/article/list/${this.state.id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            articleDetail: data.data[0]\n          })\n        }\n      })\n  }\n\n  render () {\n    let { articleDetail,id } = this.state\n    return (\n      <div className='blog'>\n        <div className='detail'>\n          <h1 className='title'>{articleDetail.title}</h1>\n          <p className='btn-operate'>\n            {\n              id!==9 &&<button className=\"btn-delete\" onClick={this.deleteHandle}>Delete</button>\n            }\n            <Link to={`/blog/edit/${articleDetail.id}`}><button className=\"btn-edit\">Edit</button></Link>\n          </p>\n          <div className='content' dangerouslySetInnerHTML={{ __html: articleDetail.content }} />\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nexport default class Edit extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      id: this.props.match && this.props.match.params ? this.props.match.params.id : null,\n      articleData :null,\n      title:'',\n      editorState : BraftEditor.createEditorState(null)\n    }\n  }\n\n  // 修改标题\n  titleChange=(e)=>{\n    this.setState({\n      title:e.target.value\n    })\n  }\n\n  // 修改内容\n  handleEditorChange = (editorState) => {\n    this.setState({\n      editorState: editorState\n    })\n  }\n\n  // 保存\n  saveHandle=(type)=>{\n    let {id, title, editorState} = this.state\n    fetch(`/api/article/${id ? 'update' : 'add'}`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"id\": id || undefined,\n        \"title\": title,\n        \"content\": editorState.toHTML()\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          if(type==='btn'){\n            this.props.history.push(`/blog/${id || data.data.id || ''}`)\n          }else{\n            this.props.history.push(`/blog/edit/${data.data.id}`)\n            this.props.history.goBack() // 每次Ctrl+S保存之后回退一下history，保证点击浏览器回退按钮时可以返回上一页。\n          }\n        }\n      })\n  }\n  // Ctrl+S 保存，留在当前页\n  saveEditorContentByKey=()=>{\n    this.saveHandle('key')\n  }\n  // 点击按钮保存，跳转回详情页\n  saveEditorContent = ()=> {\n    this.saveHandle('btn')\n  }\n\n  fetchArticle=(id)=>{\n    fetch(`/api/article/list/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          let backData = data.data[0]\n          this.setState({\n            articleData: backData,\n            title: backData.title,\n            editorState: BraftEditor.createEditorState(backData.content)\n          })\n        }\n      })\n  }\n\n  componentWillMount () {\n    let {id} = this.state\n    id && this.fetchArticle(id)\n  }\n\n  render () {\n    let {title,editorState} = this.state\n    return (\n      <div className=\"blog\">\n        <div className='edit'>\n          <div className=\"edit-content\">\n            <div className=\"edit-item\">\n              <p>Title：</p>\n              <input className=\"title\" value={title} onChange={this.titleChange}/>\n            </div>\n            <div className=\"edit-item\">\n              <p>Content：</p>\n              <div className=\"article-braft-edit\">\n                <BraftEditor\n                  value={editorState}\n                  onChange={this.handleEditorChange}\n                  onSave={this.saveEditorContentByKey}\n                />\n              </div>\n            </div>\n            <div className=\"edit-item item-submit\">\n              <button className=\"submit\" onClick={this.saveEditorContent}>Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './contact.less';\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div className='contact'>\n                Email：<a href='mailto:980901387@qq.com'>980901387@qq.com</a>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.less'\nimport Header from './component/Header/Header'\nimport About from './page/about'\nimport Resume from './page/resume'\nimport { List, Details, Edit } from './page/blog'\nimport Contact from './page/contact'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userInfo: null\n    }\n  }\n  componentDidMount () {\n    let fetConfig = {\n      method:\"GET\",\n      credentials: 'include',\n    }\n    fetch(`/api/user/user_info`,fetConfig)\n      .then(res => res.json())\n      .then(data => {\n        console.log(fetConfig)\n        if (data.status === 0) {\n          this.setState({\n            userInfo: data.data\n          })\n        }\n      })\n  }\n  render () {\n    let { userInfo } = this.state\n    return (\n      <div>\n        <Router>\n          <div className='App'>\n            <Header />\n            <Route exact path='/' component={() => (<About userInfo={userInfo} />)} />\n            <Route path='/resume' component={Resume} />\n            <Switch>\n              <Route path='/blog/edit/:id' component={Edit} />\n              <Route path='/blog/edit' component={Edit} />\n              <Route path='/blog/:id' component={Details} />\n              <Route exact path='/blog' component={List} />\n            </Switch>\n            <Route path='/contact' component={Contact} />\n            <footer />\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}