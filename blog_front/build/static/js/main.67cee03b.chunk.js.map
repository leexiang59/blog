{"version":3,"sources":["component/Header/Header.js","page/about/index.js","page/resume/index.js","page/blog/src/List.js","page/blog/src/Details.js","page/blog/src/EditorComponent.js","page/blog/src/Edit.js","page/blog/src/Add.js","page/contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navList","title","href","react_default","a","createElement","className","map","item","index","key","Link","to","Component","About","valueChange","type","value","setState","defineProperty","loginHandle","_this$state","userName","password","fetch","method","credentials","headers","Content-Type","body","JSON","stringify","name","then","res","json","data","status","window","location","reload","showLogin","_this2","userInfo","_this$state2","onChange","e","target","onClick","concat","Resume","List","articleList","id","dangerouslySetInnerHTML","__html","content","Details","deleteHandle","history","push","articleDetail","match","params","EditorComponent","handleEditorChange","editorState","editorChange","saveEditorContentByKey","saveHandle","articleData","BraftEditor","createEditorState","dist_default","onSave","Edit","titleChange","toHTML","saveEditorContent","fetchArticle","backData","undefined","EditorComponent_EditorComponent","Add","Contact","App","statusText","catch","err","console","log","BrowserRouter","Header_Header_Header","Route","exact","path","component","about_About","Switch","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6SAGqBA,qBACnB,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAS,CACP,CAAEC,MAAO,QAASC,KAAM,KACxB,CAAED,MAAO,SAAUC,KAAM,WACzB,CAAED,MAAO,OAAQC,KAAM,SACvB,CAAED,MAAO,UAAWC,KAAM,cAPZV,wEAWV,IACFQ,EAAYL,KAAKI,MAAjBC,QACN,OACEG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,UAEIL,EAAQO,IAAI,SAACC,EAAMC,GAAP,OAAiBN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAQ,IAAIN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAIJ,EAAKN,MAAOM,EAAKP,mBAlBrDY,sBCAfC,sBACnB,SAAAA,EAAavB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,IAClBtB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqB,GAAAhB,KAAAH,KAAMJ,KAQRwB,YAAc,SAACC,EAAMC,GACnBzB,EAAK0B,SAALzB,OAAA0B,EAAA,EAAA1B,CAAA,GAAgBuB,EAAOC,KAVLzB,EAcpB4B,YAAY,WAAK,IAAAC,EACY7B,EAAKO,MAA3BuB,EADUD,EACVC,SAAUC,EADAF,EACAE,SACfC,MAAK,kBAAoB,CACvBC,OAAQ,OACRC,YAAa,UACbC,QAAS,CAACC,eAAgB,kCAC1BC,KAAMC,KAAKC,UAAU,CACnBC,KAAQV,EACRC,SAAYA,MAGbU,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACgB,IAAhBA,EAAKC,QAEPC,OAAOC,SAASC,YA3BtBhD,EAAKO,MAAQ,CACX0C,WAAW,EACXnB,SAAU,GACVC,SAAU,IALM/B,wEAiCV,IAAAkD,EAAA/C,KAEDgD,EAAYhD,KAAKJ,MAAjBoD,SAFCC,EAG8BjD,KAAKI,MAAtC0C,EAHGG,EAGHH,UAAWnB,EAHRsB,EAGQtB,SAAUC,EAHlBqB,EAGkBrB,SAC1B,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEVmC,EAKGtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OACLC,MAAOK,EACPuB,SAAU,SAACC,GAAD,OAAOJ,EAAK3B,YAAY,WAAY+B,EAAEC,OAAO9B,UAC9Dd,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WACLC,MAAOM,EACPsB,SAAU,SAACC,GAAD,OAAOJ,EAAK3B,YAAY,WAAY+B,EAAEC,OAAO9B,UAC9Dd,EAAAC,EAAAC,cAAA,UAAQ2C,QAASrD,KAAKyB,aAAtB,OAXFjB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,aAAA2C,OAAeN,EAAS,QAAQ,UACzCK,QAAS,WAAKN,EAAKxB,SAAS,CAACuB,WAAU,OAahDtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,wCA3DyBQ,cCDdqC,2LAEb,OACI/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,iBAHwBO,cCCfsC,sBACnB,SAAAA,EAAa5D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,IAClB3D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,KAAAH,KAAMJ,KACDQ,MAAQ,CACXqD,YAAa,IAHG5D,mFAOC,IAAAkD,EAAA/C,KACnB6B,MAAK,qBACFS,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACgB,IAAhBA,EAAKC,QACPK,EAAKxB,SAAS,CACZkC,YAAahB,EAAKA,0CAKlB,IACFgB,EAAgBzD,KAAKI,MAArBqD,YACN,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,aAAT,QAGAwC,EAAY7C,IAAI,SAACC,EAAMC,GAAP,OACdN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAOH,UAAU,gBACzBH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAE,SAAAqC,OAAWzC,EAAK6C,KACtBlD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASE,EAAKP,OAI5BE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAUgD,wBAAyB,CAAEC,OAAQ/C,EAAKgD,wBAnC/C3C,cCAb4C,cACnB,SAAAA,EAAalE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IAClBjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMJ,KAQRmE,aAAa,WACXlC,MAAK,sBAAwB,CAC3BC,OAAQ,OACRC,YAAa,UACbC,QAAS,CAACC,eAAgB,kCAC1BC,KAAMC,KAAKC,UAAU,CACnBsB,GAAM7D,EAAKO,MAAMsD,OAGlBpB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACgB,IAAhBA,EAAKC,QACP7C,EAAKD,MAAMoE,QAAQC,KAAK,aAnB9BpE,EAAKO,MAAQ,CACX8D,cAAe,GACfR,GAAI7D,EAAKD,MAAMuE,OAAStE,EAAKD,MAAMuE,MAAMC,OAASvE,EAAKD,MAAMuE,MAAMC,OAAOV,GAAG,EAAI,MAJjE7D,mFAyBC,IAAAkD,EAAA/C,KACnB6B,MAAK,qBAAAyB,OAAsBtD,KAAKI,MAAMsD,KACnCpB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACgB,IAAhBA,EAAKC,QACPK,EAAKxB,SAAS,CACZ2C,cAAezB,EAAKA,KAAK,wCAMzB,IAAAf,EACmB1B,KAAKI,MAA1B8D,EADExC,EACFwC,cAAcR,EADZhC,EACYgC,GACpB,OACElD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASuD,EAAc5D,OACrCE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAEJ,IAAL+C,GAASlD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAa0C,QAASrD,KAAK+D,cAA7C,UAEXvD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAE,cAAAqC,OAAgBY,EAAcR,KAAMlD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAlB,UAE9CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUgD,wBAAyB,CAAEC,OAAQM,EAAcL,oBAlD/C3C,8BCChBmD,sBACnB,SAAAA,EAAazE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IAClBxE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuE,GAAAlE,KAAAH,KAAMJ,KAQR0E,mBAAqB,SAACC,GACpB1E,EAAK0B,SAAS,CACZgD,YAAaA,IAEf1E,EAAKD,MAAM4E,aAAaD,IAbN1E,EAiBpB4E,uBAAuB,WACrB5E,EAAKD,MAAM8E,WAAW,QAhBtB7E,EAAKO,MAAQ,CACXuE,YAAa,KACbJ,YAAcK,IAAYC,kBAAkBhF,EAAKD,MAAM0B,OAAO,OAJ9CzB,wEAoBV,IACH0E,EAAevE,KAAKI,MAApBmE,YACL,OACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CACEa,MAAOiD,EACPrB,SAAUlD,KAAKsE,mBACfS,OAAQ/E,KAAKyE,iCA5BsBvD,cCDxB8D,cACnB,SAAAA,EAAapF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IAClBnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAMJ,KASRqF,YAAY,SAAC9B,GACXtD,EAAK0B,SAAS,CACZjB,MAAM6C,EAAEC,OAAO9B,SAZCzB,EAiBpB2E,aAAe,SAACG,GACd9E,EAAK0B,SAAS,CACZoD,iBAnBgB9E,EAwBpB6E,WAAW,SAACrD,GAAO,IAAAK,EACc7B,EAAKO,MAA/BsD,EADYhC,EACZgC,GAAIpD,EADQoB,EACRpB,MAAOqE,EADCjD,EACDiD,YAChB9C,MAAK,sBAAwB,CAC3BC,OAAQ,OACRC,YAAa,UACbC,QAAS,CAACC,eAAgB,kCAC1BC,KAAMC,KAAKC,UAAU,CACnBsB,GAAMA,EACNpD,MAASA,EACTuD,QAAWc,EAAYO,aAGxB5C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACgB,IAAhBA,EAAKC,QAEG,QAAPrB,GACDxB,EAAKD,MAAMoE,QAAQC,KAAnB,SAAAX,OAAiCI,GAAMjB,EAAKA,KAAKiB,IAAM,QAzC7C7D,EAgDpBsF,kBAAoB,WAClBtF,EAAK6E,WAAW,QAjDE7E,EAoDpBuF,aAAa,SAAC1B,GACZ7B,MAAK,qBAAAyB,OAAsBI,IACxBpB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAKC,OAAc,CACrB,IAAI2C,EAAW5C,EAAKA,KAAK,GACzB5C,EAAK0B,SAAS,CACZjB,MAAO+E,EAAS/E,MAChBqE,YAAaU,EAASxB,cA1D9BhE,EAAKO,MAAQ,CACXsD,GAAI7D,EAAKD,MAAMuE,OAAStE,EAAKD,MAAMuE,MAAMC,OAASvE,EAAKD,MAAMuE,MAAMC,OAAOV,GAAK,KAC/EiB,YAAa,KACbrE,MAAM,IALUT,oFAkEE,IACf6D,EAAM1D,KAAKI,MAAXsD,GACLA,GAAM1D,KAAKoF,aAAa1B,oCAGhB,IAAAT,EACkBjD,KAAKI,MAA1BE,EADG2C,EACH3C,MAAMqE,EADH1B,EACG0B,YACX,OACEnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQW,MAAOhB,EAAO4C,SAAUlD,KAAKiF,eAExDzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,0BAEgB,OAAdiE,QAAoCW,IAAdX,EAA0B,GAC9CnE,EAAAC,EAAAC,cAAC6E,EAAD,CACEjE,MAAOqD,EACPD,WAAY1E,KAAK0E,WACjBF,aAAcxE,KAAKwE,gBAI3BhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAAS0C,QAASrD,KAAKmF,mBAAzC,mBA9FoBjE,aCAbsE,cACnB,SAAAA,EAAa5F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IAClB3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,KAAMJ,KAQRqF,YAAY,SAAC9B,GACXtD,EAAK0B,SAAS,CACZjB,MAAM6C,EAAEC,OAAO9B,SAXCzB,EAgBpB2E,aAAe,SAACG,GACd9E,EAAK0B,SAAS,CACZoD,iBAlBgB9E,EAuBpB6E,WAAW,SAACrD,GAAO,IAAAK,EACU7B,EAAKO,MAA3BE,EADYoB,EACZpB,MAAOqE,EADKjD,EACLiD,YACZ9C,MAAK,mBAAqB,CACxBC,OAAQ,OACRC,YAAa,UACbC,QAAS,CAACC,eAAgB,kCAC1BC,KAAMC,KAAKC,UAAU,CACnB9B,MAASA,EACTuD,QAAWc,EAAYO,aAExB5C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACgB,IAAhBA,EAAKC,SAEG,QAAPrB,EACDxB,EAAKD,MAAMoE,QAAQC,KAAnB,SAAAX,OAAiCb,EAAKA,KAAKiB,IAAM,KAGjD7D,EAAKD,MAAMoE,QAAQC,KAAnB,cAAAX,OAAsCb,EAAKA,KAAKiB,SAzCtC7D,EAiDpBsF,kBAAoB,WAClBtF,EAAK6E,WAAW,QAhDhB7E,EAAKO,MAAQ,CACXE,MAAM,GACNqE,YAAa,MAJG9E,wEAqDV,IACHS,EAASN,KAAKI,MAAdE,MACL,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQW,MAAOhB,EAAO4C,SAAUlD,KAAKiF,eAExDzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC6E,EAAD,CACEb,WAAY1E,KAAK0E,WACjBF,aAAcxE,KAAKwE,gBAGvBhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAAS0C,QAASrD,KAAKmF,mBAAzC,mBAxEmBjE,aCDZuE,2LAEb,OACIjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,cACUH,EAAAC,EAAAC,cAAA,KAAGH,KAAK,2BAAR,4BAJeW,cC8DtBwE,cAtDb,SAAAA,EAAa9F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0F,IAClB7F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4F,GAAAvF,KAAAH,KAAMJ,KACDQ,MAAQ,CACX4C,SAAU,MAHMnD,mFAMC,IAAAkD,EAAA/C,KAKnB6B,MAAK,sBAJW,CACdC,OAAQ,MACRC,YAAa,YAGZO,KAAK,SAAAC,GACJ,GAAmB,MAAfA,EAAIG,OACN,OAAOH,EAAIC,OAEX,MAAMD,EAAIoD,aAGbrD,KAAK,SAAAG,GACgB,IAAhBA,EAAKC,QACPK,EAAKxB,SAAS,CACZyB,SAAUP,EAAKA,SAIpBmD,MAAM,SAACC,GACNC,QAAQC,IAAIF,sCAGR,IACF7C,EAAahD,KAAKI,MAAlB4C,SACN,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,CAAOtD,SAAUA,OACzDxC,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW9C,IACjC/C,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACE/F,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAWrB,IACxCxE,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWrB,IACpCxE,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWb,IACnChF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWvC,IACnCtD,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAW7C,KAEvChD,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWZ,IAClCjF,EAAAC,EAAAC,cAAA,yBAhDMQ,aCGEsF,QACW,cAA7B7D,OAAOC,SAAS6D,UAEe,UAA7B9D,OAAOC,SAAS6D,UAEhB9D,OAAOC,SAAS6D,SAAStC,MACvB,2DCbNuC,IAASC,OAAOnG,EAAAC,EAAAC,cAACkG,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3E,KAAK,SAAA4E,GACjCA,EAAaC","file":"static/js/main.67cee03b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Header.less'\nexport default class Header extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      navList: [\n        { title: 'ABOUT', href: '/' },\n        { title: 'RESUME', href: '/resume' },\n        { title: 'BLOG', href: '/blog' },\n        { title: 'CONTACT', href: '/contact' }\n      ]\n    }\n  }\n  render () {\n    let { navList } = this.state\n    return (\n      <header className='header'>\n        <ul>\n          {\n            navList.map((item, index) => <li key={index + ''}><Link to={item.href}>{item.title}</Link></li>)\n          }\n        </ul>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './about.less'\n// import homeLogo from '../../img/home_logo.jpg';\nexport default class About extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      showLogin: false,\n      userName: '',\n      password: ''\n    }\n  }\n\n  valueChange = (type, value) => {\n    this.setState({[type]: value})\n  }\n\n  // 登录\n  loginHandle=()=> {\n    let {userName, password} = this.state\n    fetch(`/api/user/login`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"name\": userName,\n        \"password\": password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          //this.setState({showLogin:false})\n          window.location.reload()\n        }\n      })\n  }\n  render () {\n    // let age = new Date().getFullYear()\n    const {userInfo} = this.props\n    let {showLogin, userName, password} = this.state\n    return (\n      <div className='about'>\n        {\n          !showLogin ?\n            <div className={`logo logo-${userInfo?'login':'logout'}`}\n                 onClick={()=>{this.setState({showLogin:true})}}>\n              {/* <img src={homeLogo} alt=''/> */}\n            </div>\n            : <div className=\"login-form\">\n              <input type='text'\n                     value={userName}\n                     onChange={(e) => this.valueChange('userName', e.target.value)}/>\n              <input type='password'\n                     value={password}\n                     onChange={(e) => this.valueChange('password', e.target.value)}/>\n              <button onClick={this.loginHandle}>Go</button>\n            </div>\n        }\n        <div className='info'>\n          <p>Name：Will</p>\n          {/* <p>Age：{age - 1993}</p> */}\n          <p>Country：China</p>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './resume.less';\nexport default class Resume extends Component {\n    render() {\n        return (\n            <div className='resume'>\n                Resume\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nexport default class List extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleList: []\n    }\n  }\n\n  componentDidMount () {\n    fetch(`/api/article/list`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            articleList: data.data\n          })\n        }\n      })\n  }\n  render () {\n    let { articleList } = this.state\n    return (\n      <div className='blog'>\n        <div className='list'>\n          <div className='add-blog'>\n            <Link to='/blog/add'>Add</Link>\n          </div>\n          {\n            articleList.map((item, index) =>\n              <div key={index} className='article-item'>\n                <Link to={`/blog/${item.id}`}>\n                  <h3 className='title'>{item.title}</h3>\n                  {/* <p className='message'>\n                    <span>{item.createTime}</span>\n                  </p> */}\n                  <p className='content' dangerouslySetInnerHTML={{ __html: item.content }} />\n                </Link>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nexport default class Details extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleDetail: {},\n      id: this.props.match && this.props.match.params ? this.props.match.params.id-0 : null,\n    }\n  }\n\n  // 删除\n  deleteHandle=()=>{\n    fetch(`/api/article/delete`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"id\": this.state.id\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.props.history.push('/blog/')\n        }\n      })\n  }\n  componentDidMount () {\n    fetch(`/api/article/list/${this.state.id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            articleDetail: data.data[0]\n          })\n        }\n      })\n  }\n\n  render () {\n    let { articleDetail,id } = this.state\n    return (\n      <div className='blog'>\n        <div className='detail'>\n          <h1 className='title'>{articleDetail.title}</h1>\n          <p className='btn-operate'>\n            {\n              id!==9 &&<button className=\"btn-delete\" onClick={this.deleteHandle}>Delete</button>\n            }\n            <Link to={`/blog/edit/${articleDetail.id}`}><button className=\"btn-edit\">Edit</button></Link>\n          </p>\n          <div className='content' dangerouslySetInnerHTML={{ __html: articleDetail.content }} />\n        </div>\n      </div>\n    )\n  }\n}\n","\nimport React, { Component } from 'react'\nimport BraftEditor from 'braft-editor'\nimport 'braft-editor/dist/index.css'\nexport default class EditorComponent extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      articleData :null,\n      editorState : BraftEditor.createEditorState(this.props.value||null)\n    }\n  }\n\n  // 修改内容\n  handleEditorChange = (editorState) => {\n    this.setState({\n      editorState: editorState\n    })\n    this.props.editorChange(editorState)\n  }\n\n  // Ctrl+S 保存，留在当前页\n  saveEditorContentByKey=()=>{\n    this.props.saveHandle('key')\n  }\n  render () {\n    let {editorState} = this.state\n    return (\n      <div className=\"article-braft-edit\">\n        <BraftEditor\n          value={editorState}\n          onChange={this.handleEditorChange}\n          onSave={this.saveEditorContentByKey}\n        />\n      </div>\n    )\n  }\n}","\nimport React, { Component } from 'react'\nimport EditorComponent from './EditorComponent'\nexport default class Edit extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      id: this.props.match && this.props.match.params ? this.props.match.params.id : null,\n      articleData :null,\n      title:'',\n    }\n  }\n\n  // 修改标题\n  titleChange=(e)=>{\n    this.setState({\n      title:e.target.value\n    })\n  }\n\n  // 修改内容\n  editorChange = (articleData) => {\n    this.setState({\n      articleData\n    })\n  }\n\n  // 保存\n  saveHandle=(type)=>{\n    let {id, title, articleData} = this.state\n    fetch(`/api/article/update`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"id\": id,\n        \"title\": title,\n        \"content\": articleData.toHTML()\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          // 点击按钮保存时，跳转详情页。Ctrl+S保存时，留在当前编辑页。\n          if(type==='btn'){\n            this.props.history.push(`/blog/${id || data.data.id || ''}`)\n          }\n        }\n      })\n  }\n\n  // 点击按钮保存，跳转回详情页\n  saveEditorContent = ()=> {\n    this.saveHandle('btn')\n  }\n\n  fetchArticle=(id)=>{\n    fetch(`/api/article/list/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          let backData = data.data[0]\n          this.setState({\n            title: backData.title,\n            articleData: backData.content\n          })\n        }\n      })\n  }\n\n  componentWillMount () {\n    let {id} = this.state\n    id && this.fetchArticle(id)\n  }\n\n  render () {\n    let {title,articleData} = this.state\n    return (\n      <div className=\"blog\">\n        <div className='edit'>\n          <div className=\"edit-content\">\n            <div className=\"edit-item\">\n              <p>Title：</p>\n              <input className=\"title\" value={title} onChange={this.titleChange}/>\n            </div>\n            <div className=\"edit-item\">\n              <p>Content：</p>\n              {\n                articleData===null || articleData===undefined ? '' :\n                  <EditorComponent\n                    value={articleData}\n                    saveHandle={this.saveHandle}\n                    editorChange={this.editorChange}\n                  />\n              }\n            </div>\n            <div className=\"edit-item item-submit\">\n              <button className=\"submit\" onClick={this.saveEditorContent}>Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","\nimport React, { Component } from 'react'\nimport EditorComponent from './EditorComponent'\nexport default class Add extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      title:'',\n      articleData :null,\n    }\n  }\n\n  // 修改标题\n  titleChange=(e)=>{\n    this.setState({\n      title:e.target.value\n    })\n  }\n\n  // 修改内容\n  editorChange = (articleData) => {\n    this.setState({\n      articleData\n    })\n  }\n\n  // 保存\n  saveHandle=(type)=>{\n    let {title, articleData} = this.state\n    fetch(`/api/article/add`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {'Content-Type': 'application/json;charset=UTF-8'},\n      body: JSON.stringify({\n        \"title\": title,\n        \"content\": articleData.toHTML()\n      })\n    }).then(res => res.json())\n      .then(data => {\n        if (data.status === 0) {\n          // 点击按钮保存时，跳转详情页。\n          if(type==='btn'){\n            this.props.history.push(`/blog/${data.data.id || ''}`)\n          }else{\n            // Ctrl+S保存时，跳转对应详情页。由添加转为编辑状态。\n            this.props.history.push(`/blog/edit/${data.data.id}`)\n            //this.props.history.goBack() // 每次Ctrl+S保存之后回退一下history，保证点击浏览器回退按钮时可以返回上一页。\n          }\n        }\n      })\n  }\n\n  // 点击按钮保存，跳转回详情页\n  saveEditorContent = ()=> {\n    this.saveHandle('btn')\n  }\n\n  render () {\n    let {title} = this.state\n    return (\n      <div className=\"blog\">\n        <div className='edit'>\n          <div className=\"edit-content\">\n            <div className=\"edit-item\">\n              <p>Title：</p>\n              <input className=\"title\" value={title} onChange={this.titleChange}/>\n            </div>\n            <div className=\"edit-item\">\n              <p>Content：</p>\n              <EditorComponent\n                saveHandle={this.saveHandle}\n                editorChange={this.editorChange}\n              />\n            </div>\n            <div className=\"edit-item item-submit\">\n              <button className=\"submit\" onClick={this.saveEditorContent}>Save</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './contact.less';\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div className='contact'>\n                Email：<a href='mailto:980901387@qq.com'>980901387@qq.com</a>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.less'\nimport Header from './component/Header/Header'\nimport About from './page/about'\nimport Resume from './page/resume'\nimport { List, Details, Edit, Add } from './page/blog'\nimport Contact from './page/contact'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userInfo: null\n    }\n  }\n  componentDidMount () {\n    let fetConfig = {\n      method: 'GET',\n      credentials: 'include'\n    }\n    fetch(`/api/user/user_info`, fetConfig)\n      .then(res => {\n        if (res.status === 200) {\n          return res.json()\n        } else {\n          throw res.statusText\n        }\n      })\n      .then(data => {\n        if (data.status === 0) {\n          this.setState({\n            userInfo: data.data\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n  render () {\n    let { userInfo } = this.state\n    return (\n      <div>\n        <Router>\n          <div className='App'>\n            <Header />\n            <Route exact path='/' component={() => (<About userInfo={userInfo} />)} />\n            <Route path='/resume' component={Resume} />\n            <Switch>\n              <Route path='/blog/edit/:id' component={Edit} />\n              <Route path='/blog/edit' component={Edit} />\n              <Route path='/blog/add' component={Add} />\n              <Route path='/blog/:id' component={Details} />\n              <Route exact path='/blog' component={List} />\n            </Switch>\n            <Route path='/contact' component={Contact} />\n            <footer />\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}